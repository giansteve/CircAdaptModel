function P=CircAdaptDisplay(Par);
% function P=CircAdaptDisplay
% Theo Arts, Maastricht University, Eindhoven University of Technology,
% April 3, 2004, email: t.arts@bf.unimaas.nl
% Reads statevariables from Par.SVar, graphical display of some variables
% Needs also parameter structure Par
% Theo Arts, Maastricht University, Aug 2003

[SVarDot,P]=HrtSVarDot(0,transpose(Par.SVar),[],Par);

qSc=Par.Scal.Flow; VSc=Par.Scal.Volume/10; pSc=1e3;
Finish=( (P.t(end)-P.t(1)-P.tEnd)>0.001*P.tCycle ); %mark for final display with legends
t=P.t-P.t(end)+P.tCycle+P.Dt;

%t(end)=round(t(end)/P.tCycle)*P.tCycle; %setting tmax fixed

OFFSET=-20;

%==== Hemodynamics
figure(2); plot(t,[...
        P.TubeLArt.pIn/pSc,...
        OFFSET+P.TubeRArt.pIn/pSc,...
        P.Lv.pIn/pSc,...
        OFFSET+P.Rv.pIn/pSc,...
        P.Lv.VHem/VSc,...
        OFFSET+(P.Rv.VHem)/VSc,...
        P.La.VHem/VSc,...
        OFFSET+P.Ra.VHem/VSc,...
        P.ValveLArt.q/qSc,...
        OFFSET+P.ValveRArt.q/qSc,...
        P.ValveLAv.q/qSc,...
        OFFSET+P.ValveRAv.q/qSc,...
        P.ValveLVen.q/qSc,...
        OFFSET+P.ValveRVen.q/qSc,...
        P.ValveDUCT.q/qSc,...
        P.ValveVSD.q/qSc,...
        P.ValveASD.q/qSc]);

if Finish
    legend('pLArt','pRArt','pLv','pRv','VLv','VRv','VLa','VRa','qLArt','qRArt',...
        'qLAv','qRAv','qLVen','qRVen','qDUCT','qRAv','qASD',2);
    title(['FLOW[',num2str(Par.Scal.Flow),']; PRESSURE[',num2str(pSc),']; VOLUME[',...
        num2str(Par.Scal.Volume),']']);
end

figure(3); plot(...
    P.La.VHem,10*P.La.pIn,...
    P.Lv.VHem,P.Lv.pIn,...
    P.Ra.VHem,10*P.Ra.pIn,...
    P.Rv.VHem,P.Rv.pIn);
if Finish
    legend('La','Lv','Ra x10','Rv x10',2);
end
figure(4); plot(...
    P.La.Sarc.Ls,P.La.Sarc.G,...
    P.Lv.Sarc.Ls,P.Lv.Sarc.G,...
    P.Ra.Sarc.Ls,P.Ra.Sarc.G,...
    P.Rv.Sarc.Ls,P.Rv.Sarc.G);
if Finish
    legend('La','Lv','Ra','Rv',2);
end

aux=max(max([P.La.pIn,P.Ra.pIn]))/pSc;
figure(5); plot(t,[...
        P.TubeLVen.pIn/pSc,...
        P.TubeRVen.pIn/pSc,...
        P.La.pIn/pSc,...
        P.Ra.pIn/pSc,...
        min(aux,P.Lv.pIn/pSc),...
        min(aux,P.Rv.pIn/pSc)]);
if Finish
    legend('pLVen','pRVen','pLa','pRa','pLv','pRv',2);
end

figure(3);figure(4);figure(5);figure(2);

